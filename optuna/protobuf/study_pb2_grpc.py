# flake8: noqa
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import study_pb2 as study__pb2


class StudyStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.create = channel.unary_unary(
        '/optuna.study.Study/create',
        request_serializer=study__pb2.CreateStudyOptions.SerializeToString,
        response_deserializer=study__pb2.StudyInstance.FromString,
        )


class StudyServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StudyServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'create': grpc.unary_unary_rpc_method_handler(
          servicer.create,
          request_deserializer=study__pb2.CreateStudyOptions.FromString,
          response_serializer=study__pb2.StudyInstance.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'optuna.study.Study', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
