syntax = "proto3";

package optuna.study;

import "optuna/protobuf/pruners.proto";
import "optuna/protobuf/samplers.proto";

service Study {
  rpc create_study(CreateStudyOptions) returns (StudyInstance) {}
  rpc close_study(StudyInstance) returns (Empty) {}

  rpc start_trial(StudyInstance) returns (TrialInstance) {}
  rpc finish_trial(FinishTrialRequest) returns (Empty) {}
  rpc prune_trial(PruneTrialRequest) returns (Empty) {}
  rpc suggest_uniform(SuggestUniformRequest) returns (SuggestedDouble) {}
  rpc best_params(StudyInstance) returns (BestParams) {}

  // open_study
  // finish_stody
  // should_prone_trial
  // report_intermediate
  // suggest_xxx
  // get_xxx
  // set_xxx
}

message BestParams {
  map<string, double> params = 1;
}

message SuggestUniformRequest {
  TrialInstance trial = 1;
  string parameter_name = 2;
  double low = 3;
  double high = 4;
}

message SuggestedDouble {
  double value = 1;
}

message FinishTrialRequest {
  TrialInstance trial = 1;
  double value = 2;
}

message PruneTrialRequest {
  TrialInstance trial = 1;
  string reason = 2;
}

message CreateStudyOptions {
  string study_name = 1;
  optuna.samplers.Sampler sampler = 2;
  optuna.pruners.Pruner pruner = 3;
  string storage = 4;
  Direction direction = 5;
}

message StudyInstance {
  uint64 instance_id = 1;
}

enum  Direction {
  MINIMIZE = 0;
  MAXIMIZE = 1;
}

// TODO: use "google/protobuf/empty.proto"
message Empty {}

message TrialInstance {
  optuna.study.StudyInstance study = 1;
  int32 trial_id = 2;
}
